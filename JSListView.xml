<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>com.salvadorjhai.widgets.JSListView2</name>
        <shortname>JSListView2</shortname>
        <comment>JSListView2 base on Android Listview.
 You can use designer to create your item layout, just inflate this layout using panel LoadLayout.
 Use this listview together with JSListAdapter or JSCursorAdapter</comment>
        <objectwrapper>android.widget.ListView</objectwrapper>
        <owner>activity</owner>
        <event>OnItemClick(view As JSViewHolder, position As int)</event>
        <event>OnItemLongClick(view As JSViewHolder, position As int)</event>
        <method>
            <name>IsFastScrollEnabled</name>
            <comment>Returns true if the fast scroller is enabled.
Return type: @return:true if fast scroll is enabled, false otherwise</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addHeaderView</name>
            <comment>Add a fixed view to appear at the top of the list. If addHeaderView is
 called more than once, the views will appear in the order they were
 added. Views added using this call can take focus if they want.
 
 NOTE: Call this before calling setAdapter. This is so ListView can wrap
 the supplied cursor with one that will also account for header and footer
 views.
v: The view to add.
data: Data to associate with this view
isSelectable: whether the item is selectable</comment>
            <returntype>void</returntype>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>isSelectable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsFastScrollAlwaysVisible</name>
            <comment>Returns true if the fast scroller is set to always show on this view.
Return type: @return:true if the fast scroller will always show</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>addFooterView</name>
            <comment>Add a fixed view to appear at the bottom of the list. If addFooterView is
 called more than once, the views will appear in the order they were
 added. Views added using this call can take focus if they want.
 
 NOTE: Call this before calling setAdapter. This is so ListView can wrap
 the supplied cursor with one that will also account for header and footer
 views.
v: The view to add.
data: Data to associate with this view
isSelectable: true if the footer view can be selected</comment>
            <returntype>void</returntype>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>isSelectable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>smoothScrollToPosition</name>
            <comment>Smooth scroll to position.
position: the position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>paramPanelWrapper</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>paramLabelWrapper</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>paramMap</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>smoothScrollByOffset</name>
            <comment>Smooth scroll by offset.
offset: the offset</comment>
            <returntype>void</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>CacheColorHint</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment>When set to a non-zero value, the cache color hint indicates that this list is always drawn on top of a solid, single-color, opaque background. Zero means that what's behind this object is translucent (non solid) or is not made of a single color.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Divider</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>divider</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the divider.</comment>
        </property>
        <property>
            <name>DividerHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment>Gets the divider height.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HeaderDividersEnabled</name>
            <parameter>
                <name>headerDividersEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the header dividers enabled.</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FooterDividersEnabled</name>
            <parameter>
                <name>footerDividersEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the footer dividers enabled.</comment>
        </property>
        <property>
            <name>EmptyView</name>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>emptyView</name>
                <type>android.view.View</type>
            </parameter>
            <comment>When the current adapter is empty, the AdapterView can display a special view
 call the empty view. The empty view is used to provide feedback to the user
 that no data is available in this AdapterView.</comment>
        </property>
        <property>
            <name>OverScrollMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <comment>Returns the over-scroll mode for this view. The result will be one of OVER_SCROLL_ALWAYS (default), OVER_SCROLL_IF_CONTENT_SCROLLS (allow over-scrolling only if the view content is larger than the container), or OVER_SCROLL_NEVER.</comment>
        </property>
        <property>
            <name>ItemsCanFocus</name>
            <returntype>boolean</returntype>
            <comment>Gets the items can focus.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FastScrollAlwaysVisible</name>
            <parameter>
                <name>alwaysShow</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether or not the fast scroller should always be shown in place of the standard scroll bars.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OverscrollFooter</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>footer</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the overscroll footer.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OverscrollHeader</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>header</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the overscroll header.</comment>
        </property>
        <property>
            <name>FastScrollEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Specifies whether fast scrolling is enabled or disabled.</comment>
        </property>
        <property>
            <name>Selector</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>sel</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the selector.</comment>
        </property>
        <property>
            <name>Adapter</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>adapter</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get JSCursorAdapter or JSListAdapter</comment>
        </property>
        <property>
            <name>Selection</name>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>Sets the selection.</comment>
        </property>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.salvadorjhai.widgets.JSListView</name>
        <shortname>JSListView</shortname>
        <comment>JSListView base on Android Listview.
 You can use designer to create your item layout, just inflate this layout using panel LoadLayout.
 Use OnGetView event to handle and display item layout.
 IMPORTANT: THIS JSLISTVIEW WILL NO LONGER BE SUPPORTED, USE JSLISTVIEW2 INSTEAD.</comment>
        <objectwrapper>android.widget.ListView</objectwrapper>
        <owner>activity</owner>
        <event>OnGetView(position As int, itemLayout As ItemViewLayout, forViewUpdate As boolean)</event>
        <event>OnItemClick(view As ItemViewLayout, position As int)</event>
        <event>OnItemLongClick(view As ItemViewLayout, position As int)</event>
        <method>
            <name>IsFastScrollEnabled</name>
            <comment>Returns true if the fast scroller is enabled.
Return type: @return:true if fast scroll is enabled, false otherwise</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ItemUpdateAt</name>
            <comment>Item update at.
position: the position
data: the new data</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemClearAll</name>
            <comment>Clear all item on the listview</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addHeaderView</name>
            <comment>Add a fixed view to appear at the top of the list. If addHeaderView is
 called more than once, the views will appear in the order they were
 added. Views added using this call can take focus if they want.
 
 NOTE: Call this before calling setAdapter. This is so ListView can wrap
 the supplied cursor with one that will also account for header and footer
 views.
v: The view to add.
data: Data to associate with this view
isSelectable: whether the item is selectable</comment>
            <returntype>void</returntype>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>isSelectable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ItemAdd</name>
            <comment>Item add
data: the data</comment>
            <returntype>void</returntype>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>eventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsFastScrollAlwaysVisible</name>
            <comment>Returns true if the fast scroller is set to always show on this view.
Return type: @return:true if the fast scroller will always show</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>addFooterView</name>
            <comment>Add a fixed view to appear at the bottom of the list. If addFooterView is
 called more than once, the views will appear in the order they were
 added. Views added using this call can take focus if they want.
 
 NOTE: Call this before calling setAdapter. This is so ListView can wrap
 the supplied cursor with one that will also account for header and footer
 views.
v: The view to add.
data: Data to associate with this view
isSelectable: true if the footer view can be selected</comment>
            <returntype>void</returntype>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>isSelectable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>smoothScrollToPosition</name>
            <comment>Smooth scroll to position.
position: the position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>paramPanelWrapper</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>paramLabelWrapper</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>paramMap</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>smoothScrollByOffset</name>
            <comment>Smooth scroll by offset.
offset: the offset</comment>
            <returntype>void</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ItemRemoveAt</name>
            <comment>Item remove at.
position: the position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemAddAt</name>
            <comment>Add item at specific position
Index: position
data: data</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>CacheColorHint</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment>When set to a non-zero value, the cache color hint indicates that this list is always drawn on top of a solid, single-color, opaque background. Zero means that what's behind this object is translucent (non solid) or is not made of a single color.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Divider</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>divider</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the divider.</comment>
        </property>
        <property>
            <name>DividerHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment>Gets the divider height.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HeaderDividersEnabled</name>
            <parameter>
                <name>headerDividersEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the header dividers enabled.</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FooterDividersEnabled</name>
            <parameter>
                <name>footerDividersEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the footer dividers enabled.</comment>
        </property>
        <property>
            <name>EmptyView</name>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>emptyView</name>
                <type>android.view.View</type>
            </parameter>
            <comment>When the current adapter is empty, the AdapterView can display a special view
 call the empty view. The empty view is used to provide feedback to the user
 that no data is available in this AdapterView.</comment>
        </property>
        <property>
            <name>DataSource</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>data</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
            <comment>Get data source.</comment>
        </property>
        <property>
            <name>OverScrollMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <comment>Returns the over-scroll mode for this view. The result will be one of OVER_SCROLL_ALWAYS (default), OVER_SCROLL_IF_CONTENT_SCROLLS (allow over-scrolling only if the view content is larger than the container), or OVER_SCROLL_NEVER.</comment>
        </property>
        <property>
            <name>ItemsCanFocus</name>
            <returntype>boolean</returntype>
            <comment>Gets the items can focus.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FastScrollAlwaysVisible</name>
            <parameter>
                <name>alwaysShow</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether or not the fast scroller should always be shown in place of the standard scroll bars.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OverscrollFooter</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>footer</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the overscroll footer.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OverscrollHeader</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>header</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the overscroll header.</comment>
        </property>
        <property>
            <name>FastScrollEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Specifies whether fast scrolling is enabled or disabled.</comment>
        </property>
        <property>
            <name>Selector</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>sel</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>Gets the selector.</comment>
        </property>
        <property>
            <name>Selection</name>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>Sets the selection.</comment>
        </property>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.salvadorjhai.widgets.JSListView.ItemViewLayout</name>
        <shortname>ItemViewLayout</shortname>
        <comment>The Class ItemViewLayout.</comment>
        <owner>process</owner>
        <method>
            <name>findViewWithTag</name>
            <comment>Find view with tag.
tag: the tag
Return type: @return:the view</comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>findViewById</name>
            <comment>Find view by id.
id: the id
Return type: @return:the view</comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setViewId</name>
            <comment>Set id to view
v: View
id: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>v</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment>Gets the height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <comment>Gets the width.</comment>
        </property>
        <property>
            <name>Container</name>
            <returntype>android.view.ViewGroup</returntype>
            <parameter>
                <name>container</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <comment>Gets the container.</comment>
        </property>
    </class>
    <version>0.9</version>
    <author>salvadorjhai</author>
</root>
